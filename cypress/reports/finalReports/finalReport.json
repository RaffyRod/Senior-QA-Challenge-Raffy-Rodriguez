{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-12T07:58:21.749Z",
    "end": "2021-12-12T08:01:28.687Z",
    "duration": 173775,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "67c099eb-2721-4d9e-a06e-5a1c3388f4bb",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "file": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a77c76be-4b02-4066-9bfe-33b95512be67",
          "title": "SignUp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "SignUp",
              "fullTitle": "SignUp SignUp",
              "timedOut": null,
              "duration": 16626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "SIGNUP.logingButton().click();\nSIGNUP.createEmail().type(USER.email);\nSIGNUP.submitEmailButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=authentication&back=my-account#account-creation'); //filling out the user information\nSIGNUP.firstName().type(USER.name);\nSIGNUP.lastName().type(USER.lastName);\nSIGNUP.userPassword().type(USER.password);\nSIGNUP.dayOfBirth().select(USER.dayOfBirth);\nSIGNUP.monthOfBirth().select(USER.monthOfBirth);\nSIGNUP.yearOfBirth().select(USER.yearOfBirth);\nSIGNUP.signForNewsLetter().check();\nSIGNUP.receiveSpecialOffers().check();\nSIGNUP.companyName().type(USER.company);\nSIGNUP.addressFirstLine().type(USER.address);\nSIGNUP.addressSecondLine().type(USER.secondaryAddress);\nSIGNUP.addressCity().type(USER.city);\nSIGNUP.addressZipcode().type(USER.zipCode);\nSIGNUP.addressCountry().select(USER.country);\nSIGNUP.addressMoreInfo().type(USER.moreInfo);\nSIGNUP.addressHomePhone().type(USER.homePhone);\nSIGNUP.addressMobilePhone().type(USER.mobilePhone);\nSIGNUP.addressAlias().type(USER.addressAlias); //the state field needs to be filled out last due to some issues with the website\nSIGNUP.addressState().select(USER.state);\nSIGNUP.addressRegisterButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');\nSIGNUP.infoAccount().should('have.text', 'Welcome to your account. Here you can manage all of your personal information and orders.');",
              "err": {},
              "uuid": "8c0c1ec8-46af-4459-973e-d0c929938208",
              "parentUUID": "a77c76be-4b02-4066-9bfe-33b95512be67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c0c1ec8-46af-4459-973e-d0c929938208"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7c13d512-050f-4f19-af13-c4dce8dfc38c",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "file": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99832e6a-ad15-4a53-a9a9-cc8937fcb441",
          "title": "Login and Logout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login case",
              "fullTitle": "Login and Logout login case",
              "timedOut": null,
              "duration": 7833,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');",
              "err": {},
              "uuid": "f8f927b3-bc59-4b4b-858b-0372f827e9ea",
              "parentUUID": "99832e6a-ad15-4a53-a9a9-cc8937fcb441",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logOut",
              "fullTitle": "Login and Logout logOut",
              "timedOut": null,
              "duration": 2042,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.signOut();\nSIGN.authObject().should('be.visible');",
              "err": {},
              "uuid": "96939e79-5cc2-4527-862c-4f5238b5827c",
              "parentUUID": "99832e6a-ad15-4a53-a9a9-cc8937fcb441",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8f927b3-bc59-4b4b-858b-0372f827e9ea",
            "96939e79-5cc2-4527-862c-4f5238b5827c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "304b6a22-34c9-403d-9b0d-dab9c250bc9e",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "file": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
          "title": "Main Page test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Best Seller section",
              "fullTitle": "Main Page test cases Best Seller section",
              "timedOut": null,
              "duration": 34376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.bestSellers().click();\nMAIN_PAGE.activeBestSeller().should('be.visible');",
              "err": {},
              "uuid": "c6f30cea-20b2-4442-8963-a56e28b7cb7f",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search for an item using the search bar",
              "fullTitle": "Main Page test cases Search for an item using the search bar",
              "timedOut": null,
              "duration": 13658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.itemTitle(this.data.item).should('be.visible');",
              "err": {},
              "uuid": "2c96981e-a2d6-496c-b4d8-e56c85423289",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding to the wish list",
              "fullTitle": "Main Page test cases Adding to the wish list",
              "timedOut": null,
              "duration": 16339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.wishItem().trigger('mouseover');\nMAIN_PAGE.wishItemMore().click();\nMAIN_PAGE.wishListButton().click();\nMAIN_PAGE.wishAddedMsg().should('have.text', 'Added to your wishlist.');\nMAIN_PAGE.wishAddedMsgClose().click();",
              "err": {},
              "uuid": "22dd29b6-e8de-44d6-9a46-13134481a0cd",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Subscribe to NewsLetter",
              "fullTitle": "Main Page test cases Subscribe to NewsLetter",
              "timedOut": null,
              "duration": 16856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.newsBar().click();\nMAIN_PAGE.newsBar().type(USER.newsEmail);\ncy.wait(5000);\nMAIN_PAGE.newsButton().click();\nMAIN_PAGE.newsAlert().should('be.visible'); //.should('have.text', ' Newsletter : You have successfully subscribed to this newsletter.');",
              "err": {},
              "uuid": "9794d115-ce9c-4c77-98bf-19f7d15e3052",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add to shopping Cart",
              "fullTitle": "Main Page test cases Add to shopping Cart",
              "timedOut": null,
              "duration": 11707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);",
              "err": {},
              "uuid": "67468c1a-3405-4023-9097-bcf8c229b4ce",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove from shopping cart",
              "fullTitle": "Main Page test cases Remove from shopping cart",
              "timedOut": null,
              "duration": 11283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.goToCheckOut().click();\nCHECK.deleteFromCheckOut().click();\nCHECK.checkOutAlert().should('have.text', 'Your shopping cart is empty.');",
              "err": {},
              "uuid": "5ea129ea-1001-462f-bfc6-aeecadaec285",
              "parentUUID": "96060b36-17d7-44d7-8fbb-fe8f92f956eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6f30cea-20b2-4442-8963-a56e28b7cb7f",
            "2c96981e-a2d6-496c-b4d8-e56c85423289",
            "22dd29b6-e8de-44d6-9a46-13134481a0cd",
            "9794d115-ce9c-4c77-98bf-19f7d15e3052",
            "67468c1a-3405-4023-9097-bcf8c229b4ce",
            "5ea129ea-1001-462f-bfc6-aeecadaec285"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 104219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d177a58-3df2-4ab4-945f-735dbf028edc",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fe3f7e1-1937-4acb-b72e-6ce21db7a455",
          "title": "All Marvel Characters test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all Marvel characters",
              "fullTitle": "All Marvel Characters test Get all Marvel characters",
              "timedOut": null,
              "duration": 2085,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body).not.to.be.null;\n  expect(response.body.data).to.have.property('limit', 100);\n});",
              "err": {},
              "uuid": "fd11a90f-b548-452e-9d37-ac3061f27d43",
              "parentUUID": "1fe3f7e1-1937-4acb-b72e-6ce21db7a455",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get More than 100 Marvel characters",
              "fullTitle": "All Marvel Characters test Get More than 100 Marvel characters",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "0900292b-d842-4d60-bfc8-cdd585047b59",
              "parentUUID": "1fe3f7e1-1937-4acb-b72e-6ce21db7a455",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing timestamp, unable to authenticate",
              "fullTitle": "All Marvel Characters test Missing timestamp, unable to authenticate",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a timestamp.');\n});",
              "err": {},
              "uuid": "bc5b2890-0ebf-4a43-b534-cb5b824dda7e",
              "parentUUID": "1fe3f7e1-1937-4acb-b72e-6ce21db7a455",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd11a90f-b548-452e-9d37-ac3061f27d43",
            "0900292b-d842-4d60-bfc8-cdd585047b59",
            "bc5b2890-0ebf-4a43-b534-cb5b824dda7e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fa168292-3058-4887-893b-121ae3cdf2a5",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "file": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d3303a9-4e69-46b1-91ed-e01b3ff25cb7",
          "title": "Marvel Character test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetch Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Fetch Spider-Man Comics",
              "timedOut": null,
              "duration": 1082,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body.data).to.have.property('count');\n}).its('headers').its('content-type').should('include', 'application/json');",
              "err": {},
              "uuid": "83711c8a-f08a-4cc1-8f7a-dfb6ce7efd0b",
              "parentUUID": "0d3303a9-4e69-46b1-91ed-e01b3ff25cb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to fetch more than 100 Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Attempting to fetch more than 100 Spider-Man Comics",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "497414c5-18aa-49a2-ae2b-12534632402a",
              "parentUUID": "0d3303a9-4e69-46b1-91ed-e01b3ff25cb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel Character test cases Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 1072,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "ec8cf728-6b0c-4c3c-93bf-7c40ac511f6f",
              "parentUUID": "0d3303a9-4e69-46b1-91ed-e01b3ff25cb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83711c8a-f08a-4cc1-8f7a-dfb6ce7efd0b",
            "497414c5-18aa-49a2-ae2b-12534632402a",
            "ec8cf728-6b0c-4c3c-93bf-7c40ac511f6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e26d050f-826f-40fb-92a5-aeeed9da6bf1",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87eecadc-0355-4c59-9159-68005aa7c1f5",
          "title": "Marvel X-man Comic Character Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get X-man Serie Characters",
              "fullTitle": "Marvel X-man Comic Character Test Get X-man Serie Characters",
              "timedOut": null,
              "duration": 1096,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body.data.results).to.have.length(10);\n});",
              "err": {},
              "uuid": "c5abcc66-4d44-4fdf-8d82-cfad096a453f",
              "parentUUID": "87eecadc-0355-4c59-9159-68005aa7c1f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel X-man Comic Character Test Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 845,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "a5d2d951-bb97-4e5c-bcd5-86e64fe1b161",
              "parentUUID": "87eecadc-0355-4c59-9159-68005aa7c1f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to get more than 100 X-Man",
              "fullTitle": "Marvel X-man Comic Character Test Attempting to get more than 100 X-Man",
              "timedOut": null,
              "duration": 869,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "1f37434b-dcb4-4a0f-8753-d4fc639549d6",
              "parentUUID": "87eecadc-0355-4c59-9159-68005aa7c1f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5abcc66-4d44-4fdf-8d82-cfad096a453f",
            "a5d2d951-bb97-4e5c-bcd5-86e64fe1b161",
            "1f37434b-dcb4-4a0f-8753-d4fc639549d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec77a885-204e-460f-8d5c-0bb653fd282f",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "file": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ddc4b6d5-3be6-46ca-a10c-50e55c3c1cda",
          "title": "Checkout Test case",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Checkout Item",
              "fullTitle": "Checkout Test case Checkout Item",
              "timedOut": null,
              "duration": 34684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Adding Item to shopping Cart\ncy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);\nCHECK.goToCheckOut().click(); //checkOut Process\nCHECK.checkoutButton().click();\nCHECK.checkoutButton().click();\nCHECK.termsOfService().check().should('be.checked');\nCHECK.checkoutButton().click();\nCHECK.payWithBankWire().click();\nCHECK.paymentName().should('include.text', 'Bank-wire payment.');\nCHECK.checkoutButton().click();\nCHECK.orderConfirmation().should('have.text', 'Your order on My Store is complete.');\nCHECK.finalPrice().should('have.text', '$29.00');\ncy.signOut();",
              "err": {},
              "uuid": "7c49a349-eaa5-4efb-a9bc-581e263ce894",
              "parentUUID": "ddc4b6d5-3be6-46ca-a10c-50e55c3c1cda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c49a349-eaa5-4efb-a9bc-581e263ce894"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportDir": "cypress/reports/mocha",
        "reportTitle": "Senior QA Challenge: Raffy Rodriguez's Test's results",
        "reportFilename": "report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mm/dd/yyyy HH:MM"
      },
      "version": "6.0.1"
    }
  }
}