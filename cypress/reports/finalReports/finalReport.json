{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-12T07:35:55.625Z",
    "end": "2021-12-12T07:38:52.471Z",
    "duration": 163494,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eac50975-a6b5-415f-a347-e35878ec1f4d",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "file": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3245427e-4984-4467-9277-9f9df54bf115",
          "title": "SignUp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "SignUp",
              "fullTitle": "SignUp SignUp",
              "timedOut": null,
              "duration": 19437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "SIGNUP.logingButton().click();\nSIGNUP.createEmail().type(USER.email);\nSIGNUP.submitEmailButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=authentication&back=my-account#account-creation'); //filling out the user information\nSIGNUP.firstName().type(USER.name);\nSIGNUP.lastName().type(USER.lastName);\nSIGNUP.userPassword().type(USER.password);\nSIGNUP.dayOfBirth().select(USER.dayOfBirth);\nSIGNUP.monthOfBirth().select(USER.monthOfBirth);\nSIGNUP.yearOfBirth().select(USER.yearOfBirth);\nSIGNUP.signForNewsLetter().check();\nSIGNUP.receiveSpecialOffers().check();\nSIGNUP.companyName().type(USER.company);\nSIGNUP.addressFirstLine().type(USER.address);\nSIGNUP.addressSecondLine().type(USER.secondaryAddress);\nSIGNUP.addressCity().type(USER.city);\nSIGNUP.addressZipcode().type(USER.zipCode);\nSIGNUP.addressCountry().select(USER.country);\nSIGNUP.addressMoreInfo().type(USER.moreInfo);\nSIGNUP.addressHomePhone().type(USER.homePhone);\nSIGNUP.addressMobilePhone().type(USER.mobilePhone);\nSIGNUP.addressAlias().type(USER.addressAlias); //the state field needs to be filled out last due to some issues with the website\nSIGNUP.addressState().select(USER.state);\nSIGNUP.addressRegisterButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');\nSIGNUP.infoAccount().should('have.text', 'Welcome to your account. Here you can manage all of your personal information and orders.');",
              "err": {},
              "uuid": "66d30726-ee22-44a4-b377-7dfc9fbce84c",
              "parentUUID": "3245427e-4984-4467-9277-9f9df54bf115",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66d30726-ee22-44a4-b377-7dfc9fbce84c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "992eee7e-a5f5-4bd8-9c2d-8c6c0217bb7a",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "file": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "02ae5e36-c6f0-4b52-b75e-5d71654a187b",
          "title": "Login and Logout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login case",
              "fullTitle": "Login and Logout login case",
              "timedOut": null,
              "duration": 8216,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');",
              "err": {},
              "uuid": "79762e1a-83a6-4988-99e0-f9bc4ec3f6d2",
              "parentUUID": "02ae5e36-c6f0-4b52-b75e-5d71654a187b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logOut",
              "fullTitle": "Login and Logout logOut",
              "timedOut": null,
              "duration": 2151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.signOut();\nSIGN.authObject().should('be.visible');",
              "err": {},
              "uuid": "5cab0bf3-3fa4-40a3-92f3-a7c5717bc70c",
              "parentUUID": "02ae5e36-c6f0-4b52-b75e-5d71654a187b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79762e1a-83a6-4988-99e0-f9bc4ec3f6d2",
            "5cab0bf3-3fa4-40a3-92f3-a7c5717bc70c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c13bd08-7b16-4bb9-b3f3-44ebe84632b7",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "file": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88072759-0c5f-43db-8424-ec9bf4acc12d",
          "title": "Checkout Test case",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Checkout Item",
              "fullTitle": "Checkout Test case Checkout Item",
              "timedOut": null,
              "duration": 27496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Adding Item to shopping Cart\ncy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);\nCHECK.goToCheckOut().click(); //checkOut Process\nCHECK.checkoutButton().click();\nCHECK.checkoutButton().click();\nCHECK.termsOfService().check().should('be.checked');\nCHECK.checkoutButton().click();\nCHECK.payWithBankWire().click();\nCHECK.paymentName().should('include.text', 'Bank-wire payment.');\nCHECK.checkoutButton().click();\nCHECK.orderConfirmation().should('have.text', 'Your order on My Store is complete.');\nCHECK.finalPrice().should('have.text', '$29.00');\ncy.signOut();",
              "err": {},
              "uuid": "eae6792d-16a2-4270-a568-9807449b634a",
              "parentUUID": "88072759-0c5f-43db-8424-ec9bf4acc12d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eae6792d-16a2-4270-a568-9807449b634a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c0733cea-901c-4592-bd28-0209c6467cd6",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c17378d9-6a68-4c60-9179-afea34bc3f1c",
          "title": "All Marvel Characters test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all Marvel characters",
              "fullTitle": "All Marvel Characters test Get all Marvel characters",
              "timedOut": null,
              "duration": 3675,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body).not.to.be.null;\n  expect(response.body.data).to.have.property('limit', 100);\n});",
              "err": {},
              "uuid": "3f20761e-1e8d-4b61-928f-ef30efaf8138",
              "parentUUID": "c17378d9-6a68-4c60-9179-afea34bc3f1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get More than 100 Marvel characters",
              "fullTitle": "All Marvel Characters test Get More than 100 Marvel characters",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "c1e282df-8fa9-4ce3-a8e3-b0d8c73a8820",
              "parentUUID": "c17378d9-6a68-4c60-9179-afea34bc3f1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing timestamp, unable to authenticate",
              "fullTitle": "All Marvel Characters test Missing timestamp, unable to authenticate",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a timestamp.');\n});",
              "err": {},
              "uuid": "3b940026-6013-4d8a-846d-ab0334e7731b",
              "parentUUID": "c17378d9-6a68-4c60-9179-afea34bc3f1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f20761e-1e8d-4b61-928f-ef30efaf8138",
            "c1e282df-8fa9-4ce3-a8e3-b0d8c73a8820",
            "3b940026-6013-4d8a-846d-ab0334e7731b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "59fefd1e-3226-46d1-b7ca-342bfb876d5f",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "file": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6cccf28-53db-41b2-912d-16779182984b",
          "title": "Marvel Character test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetch Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Fetch Spider-Man Comics",
              "timedOut": null,
              "duration": 2520,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body.data).to.have.property('count');\n}).its('headers').its('content-type').should('include', 'application/json');",
              "err": {},
              "uuid": "8e52ef95-d5da-4797-ab3f-e69c2402883b",
              "parentUUID": "b6cccf28-53db-41b2-912d-16779182984b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to fetch more than 100 Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Attempting to fetch more than 100 Spider-Man Comics",
              "timedOut": null,
              "duration": 1453,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "aac90087-96cd-45ec-a297-8c79dd8d4034",
              "parentUUID": "b6cccf28-53db-41b2-912d-16779182984b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel Character test cases Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 2656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "a4e927c3-894e-49c9-b873-9f47cad0a188",
              "parentUUID": "b6cccf28-53db-41b2-912d-16779182984b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e52ef95-d5da-4797-ab3f-e69c2402883b",
            "aac90087-96cd-45ec-a297-8c79dd8d4034",
            "a4e927c3-894e-49c9-b873-9f47cad0a188"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "73b7dae8-bca7-4cf9-9f89-097f5452e02c",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22617d45-a92e-429f-89bd-9221932631dd",
          "title": "Marvel X-man Comic Character Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get X-man Serie Characters",
              "fullTitle": "Marvel X-man Comic Character Test Get X-man Serie Characters",
              "timedOut": null,
              "duration": 1325,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body.data.results).to.have.length(10);\n});",
              "err": {},
              "uuid": "e3bfd66f-dd1a-4b48-8484-2be6c178dbf4",
              "parentUUID": "22617d45-a92e-429f-89bd-9221932631dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel X-man Comic Character Test Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 950,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "b15a2660-0441-4dc7-aa7b-66a89c5d584b",
              "parentUUID": "22617d45-a92e-429f-89bd-9221932631dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to get more than 100 X-Man",
              "fullTitle": "Marvel X-man Comic Character Test Attempting to get more than 100 X-Man",
              "timedOut": null,
              "duration": 972,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "a203a1d6-b04f-4f4d-aae8-41b41b757a6d",
              "parentUUID": "22617d45-a92e-429f-89bd-9221932631dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3bfd66f-dd1a-4b48-8484-2be6c178dbf4",
            "b15a2660-0441-4dc7-aa7b-66a89c5d584b",
            "a203a1d6-b04f-4f4d-aae8-41b41b757a6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "62b7e7f8-93ce-4abf-b73f-b9510369087f",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "file": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
          "title": "Main Page test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Best Seller section",
              "fullTitle": "Main Page test cases Best Seller section",
              "timedOut": null,
              "duration": 17367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.bestSellers().click();\nMAIN_PAGE.activeBestSeller().should('be.visible');",
              "err": {},
              "uuid": "e85f32eb-1569-4ee3-a919-17d3a9cdcf33",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search for an using the search bar",
              "fullTitle": "Main Page test cases Search for an using the search bar",
              "timedOut": null,
              "duration": 14041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.itemTitle(this.data.item).should('be.visible');",
              "err": {},
              "uuid": "d31db930-67b5-40ce-920f-10e74c702e69",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding to the wish list",
              "fullTitle": "Main Page test cases Adding to the wish list",
              "timedOut": null,
              "duration": 22218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.wishItem().trigger('mouseover');\nMAIN_PAGE.wishItemMore().click();\nMAIN_PAGE.wishListButton().click();\nMAIN_PAGE.wishAddedMsg().should('have.text', 'Added to your wishlist.');\nMAIN_PAGE.wishAddedMsgClose().click();",
              "err": {},
              "uuid": "f657c59e-51ed-4694-9c03-57ca27bbc6da",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Subscribe to NewsLetter",
              "fullTitle": "Main Page test cases Subscribe to NewsLetter",
              "timedOut": null,
              "duration": 16454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.newsBar().click();\nMAIN_PAGE.newsBar().type(USER.newsEmail);\ncy.wait(5000);\nMAIN_PAGE.newsButton().click();\nMAIN_PAGE.newsAlert().should('be.visible'); //.should('have.text', ' Newsletter : You have successfully subscribed to this newsletter.');",
              "err": {},
              "uuid": "b0f5e582-52b5-4467-89a7-0fa5080784db",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add to shopping Cart",
              "fullTitle": "Main Page test cases Add to shopping Cart",
              "timedOut": null,
              "duration": 11525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);",
              "err": {},
              "uuid": "42ce5cdf-d9b0-4455-b2b3-a730c147300b",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove from shopping cart",
              "fullTitle": "Main Page test cases Remove from shopping cart",
              "timedOut": null,
              "duration": 10702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.goToCheckOut().click();\nCHECK.deleteFromCheckOut().click();\nCHECK.checkOutAlert().should('have.text', 'Your shopping cart is empty.');",
              "err": {},
              "uuid": "180b6110-19c5-4219-beac-e7a7d67970a5",
              "parentUUID": "bb8d8c52-71f8-47c1-a145-242db55a4f25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e85f32eb-1569-4ee3-a919-17d3a9cdcf33",
            "d31db930-67b5-40ce-920f-10e74c702e69",
            "f657c59e-51ed-4694-9c03-57ca27bbc6da",
            "b0f5e582-52b5-4467-89a7-0fa5080784db",
            "42ce5cdf-d9b0-4455-b2b3-a730c147300b",
            "180b6110-19c5-4219-beac-e7a7d67970a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 92307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportDir": "cypress/reports/mocha",
        "reportTitle": "Senior QA Challenge: Raffy Rodriguez's Test's results",
        "reportFilename": "report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mm/dd/yyyy HH:MM"
      },
      "version": "6.0.1"
    }
  }
}