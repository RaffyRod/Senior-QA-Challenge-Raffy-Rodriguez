{
  "stats": {
    "suites": 7,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-13T14:08:10.119Z",
    "end": "2021-12-13T14:12:32.592Z",
    "duration": 248734,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7c972d5-10ae-4395-80d3-6e9e223c1dc2",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "file": "cypress/integration/QAChallenge/TS_001 Login and Logout.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "697d3da7-ffb3-407b-a7ef-7e302fdc5319",
          "title": "Login and Logout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login case",
              "fullTitle": "Login and Logout login case",
              "timedOut": null,
              "duration": 25960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');",
              "err": {},
              "uuid": "19489dba-e2b9-438f-9514-e005e5e33bae",
              "parentUUID": "697d3da7-ffb3-407b-a7ef-7e302fdc5319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logOut",
              "fullTitle": "Login and Logout logOut",
              "timedOut": null,
              "duration": 7867,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.signOut();\nSIGN.authObject().should('be.visible');",
              "err": {},
              "uuid": "53dd6d7b-6247-4f82-970d-de560fe1e352",
              "parentUUID": "697d3da7-ffb3-407b-a7ef-7e302fdc5319",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19489dba-e2b9-438f-9514-e005e5e33bae",
            "53dd6d7b-6247-4f82-970d-de560fe1e352"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5be1779c-e0c9-4aa9-91c1-c4304b254f32",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "file": "cypress/integration/QAChallenge/TS_002 signUp.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71a355a0-9ad0-4d5a-956e-03162fd4c97f",
          "title": "SignUp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "SignUp",
              "fullTitle": "SignUp SignUp",
              "timedOut": null,
              "duration": 21907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "SIGNUP.logingButton().click();\nSIGNUP.createEmail().type(USER.email);\nSIGNUP.submitEmailButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=authentication&back=my-account#account-creation'); //filling out the user information\nSIGNUP.firstName().type(USER.name);\nSIGNUP.lastName().type(USER.lastName);\nSIGNUP.userPassword().type(USER.password);\nSIGNUP.dayOfBirth().select(USER.dayOfBirth);\nSIGNUP.monthOfBirth().select(USER.monthOfBirth);\nSIGNUP.yearOfBirth().select(USER.yearOfBirth);\nSIGNUP.signForNewsLetter().check();\nSIGNUP.receiveSpecialOffers().check();\nSIGNUP.companyName().type(USER.company);\nSIGNUP.addressFirstLine().type(USER.address);\nSIGNUP.addressSecondLine().type(USER.secondaryAddress);\nSIGNUP.addressCity().type(USER.city);\nSIGNUP.addressZipcode().type(USER.zipCode);\nSIGNUP.addressCountry().select(USER.country);\nSIGNUP.addressMoreInfo().type(USER.moreInfo);\nSIGNUP.addressHomePhone().type(USER.homePhone);\nSIGNUP.addressMobilePhone().type(USER.mobilePhone);\nSIGNUP.addressAlias().type(USER.addressAlias); //the state field needs to be filled out last due to some issues with the website\nSIGNUP.addressState().select(USER.state);\nSIGNUP.addressRegisterButton().click();\ncy.url().should('eq', 'http://automationpractice.com/index.php?controller=my-account');\nSIGNUP.infoAccount().should('have.text', 'Welcome to your account. Here you can manage all of your personal information and orders.');",
              "err": {},
              "uuid": "2b64b971-06e8-46f4-b83d-de7d76d74bf4",
              "parentUUID": "71a355a0-9ad0-4d5a-956e-03162fd4c97f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b64b971-06e8-46f4-b83d-de7d76d74bf4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a2076e5b-d1e6-4855-9a7e-b275c9d27546",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "file": "cypress/integration/QAChallenge/TS_003 MainPage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
          "title": "Main Page test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Best Seller section",
              "fullTitle": "Main Page test cases Best Seller section",
              "timedOut": null,
              "duration": 18710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.bestSellers().click();\nMAIN_PAGE.activeBestSeller().should('be.visible');",
              "err": {},
              "uuid": "68574aff-220c-4f6b-b4c5-2f91249d07fe",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search for an item using the search bar",
              "fullTitle": "Main Page test cases Search for an item using the search bar",
              "timedOut": null,
              "duration": 23852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.itemTitle(this.data.item).should('be.visible');",
              "err": {},
              "uuid": "892b0484-2952-403a-8ad2-8e53acfbf663",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding to the wish list",
              "fullTitle": "Main Page test cases Adding to the wish list",
              "timedOut": null,
              "duration": 22174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.searchBar().type(this.data.item);\nMAIN_PAGE.searchButton().click();\nMAIN_PAGE.wishItem().trigger('mouseover');\nMAIN_PAGE.wishItemMore().click();\nMAIN_PAGE.wishListButton().click();\nMAIN_PAGE.wishAddedMsg().should('have.text', 'Added to your wishlist.');\nMAIN_PAGE.wishAddedMsgClose().click();",
              "err": {},
              "uuid": "6094cb8e-982e-4afa-bdd8-110016524517",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Subscribe to NewsLetter",
              "fullTitle": "Main Page test cases Subscribe to NewsLetter",
              "timedOut": null,
              "duration": 20140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "MAIN_PAGE.newsBar().click();\nMAIN_PAGE.newsBar().type(USER.newsEmail);\ncy.wait(5000);\nMAIN_PAGE.newsButton().click();\nMAIN_PAGE.newsAlert().should('be.visible'); //.should('have.text', ' Newsletter : You have successfully subscribed to this newsletter.');",
              "err": {},
              "uuid": "3c0b5702-e09d-4985-bc75-bd7eaa548b5b",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add to shopping Cart",
              "fullTitle": "Main Page test cases Add to shopping Cart",
              "timedOut": null,
              "duration": 41635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);",
              "err": {},
              "uuid": "00fc9291-1ad7-4d88-83ce-bafc158f35dc",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove from shopping cart",
              "fullTitle": "Main Page test cases Remove from shopping cart",
              "timedOut": null,
              "duration": 17692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.goToCheckOut().click();\nCHECK.deleteFromCheckOut().click();\nCHECK.checkOutAlert().should('have.text', 'Your shopping cart is empty.');",
              "err": {},
              "uuid": "3436501c-d829-4052-85ac-03e3315d0997",
              "parentUUID": "476c3a84-2756-4a7b-89c4-56cb2fdc8561",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68574aff-220c-4f6b-b4c5-2f91249d07fe",
            "892b0484-2952-403a-8ad2-8e53acfbf663",
            "6094cb8e-982e-4afa-bdd8-110016524517",
            "3c0b5702-e09d-4985-bc75-bd7eaa548b5b",
            "00fc9291-1ad7-4d88-83ce-bafc158f35dc",
            "3436501c-d829-4052-85ac-03e3315d0997"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 144203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74dcad94-920a-4c7a-9e68-8155377c1bad",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_005 marvel-api-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00fced41-06cc-446b-9daf-0b030c5fecc9",
          "title": "All Marvel Characters test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all Marvel characters",
              "fullTitle": "All Marvel Characters test Get all Marvel characters",
              "timedOut": null,
              "duration": 2195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body).not.to.be.null;\n  expect(response.body.data).to.have.property('limit', 100);\n});",
              "err": {},
              "uuid": "290084e9-5240-46c5-8bf9-e0df3fc4ec79",
              "parentUUID": "00fced41-06cc-446b-9daf-0b030c5fecc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get More than 100 Marvel characters",
              "fullTitle": "All Marvel Characters test Get More than 100 Marvel characters",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "b74c6750-ddc8-49ea-a6c0-f4c87235ef0e",
              "parentUUID": "00fced41-06cc-446b-9daf-0b030c5fecc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing timestamp, unable to authenticate",
              "fullTitle": "All Marvel Characters test Missing timestamp, unable to authenticate",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters?&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a timestamp.');\n});",
              "err": {},
              "uuid": "45fb8157-e4bb-4d70-98f6-640d24c84c80",
              "parentUUID": "00fced41-06cc-446b-9daf-0b030c5fecc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "290084e9-5240-46c5-8bf9-e0df3fc4ec79",
            "b74c6750-ddc8-49ea-a6c0-f4c87235ef0e",
            "45fb8157-e4bb-4d70-98f6-640d24c84c80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1000d45-076c-4e43-8dda-4c5744c919fa",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "file": "cypress/integration/QAChallenge/TS_006 marvel-character-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "30c1686f-8648-40bb-af1d-6629992faf74",
          "title": "Marvel Character test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetch Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Fetch Spider-Man Comics",
              "timedOut": null,
              "duration": 4712,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body.data).to.have.property('count');\n}).its('headers').its('content-type').should('include', 'application/json');",
              "err": {},
              "uuid": "21dd00da-424c-4431-a512-f990a58c0c0f",
              "parentUUID": "30c1686f-8648-40bb-af1d-6629992faf74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to fetch more than 100 Spider-Man Comics",
              "fullTitle": "Marvel Character test cases Attempting to fetch more than 100 Spider-Man Comics",
              "timedOut": null,
              "duration": 1497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "58e98d89-0b17-4a24-bef8-bcadc4b6439a",
              "parentUUID": "30c1686f-8648-40bb-af1d-6629992faf74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel Character test cases Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 1112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/characters/${this.id}/comics?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "e553a0cd-c7f8-4e1e-aba5-070b07fc6250",
              "parentUUID": "30c1686f-8648-40bb-af1d-6629992faf74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21dd00da-424c-4431-a512-f990a58c0c0f",
            "58e98d89-0b17-4a24-bef8-bcadc4b6439a",
            "e553a0cd-c7f8-4e1e-aba5-070b07fc6250"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eed4b0f7-add7-4758-b52b-620f5391177d",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "file": "cypress/integration/QAChallenge/TS_007 marvel-xman-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "727072af-de71-4efd-aef9-ab1f27098651",
          "title": "Marvel X-man Comic Character Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get X-man Serie Characters",
              "fullTitle": "Marvel X-man Comic Character Test Get X-man Serie Characters",
              "timedOut": null,
              "duration": 10036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit}`).then(response => {\n  expect(response.body).not.to.be.null;\n  expect(response).to.have.property('duration');\n  expect(response.body).to.have.property('code', 200);\n  expect(response.body.data.results).to.have.length(10);\n});",
              "err": {},
              "uuid": "93dfd10d-c744-42d1-9a89-fee08519d8be",
              "parentUUID": "727072af-de71-4efd-aef9-ab1f27098651",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing hash, unable to authenticate",
              "fullTitle": "Marvel X-man Comic Character Test Missing hash, unable to authenticate",
              "timedOut": null,
              "duration": 848,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&limit=${API.limit}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 'MissingParameter');\n  expect(response.body).to.have.property('message', 'You must provide a hash.');\n});",
              "err": {},
              "uuid": "a803f61c-65f1-4bae-a231-41c82fbeed2e",
              "parentUUID": "727072af-de71-4efd-aef9-ab1f27098651",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempting to get more than 100 X-Man",
              "fullTitle": "Marvel X-man Comic Character Test Attempting to get more than 100 X-Man",
              "timedOut": null,
              "duration": 793,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `${API.url}/v1/public/comics/${this.id}/characters?ts=${API.timestamp}&apikey=${API.publicKey}&hash=${API.hash}&limit=${API.limit + 1}`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property('code', 409);\n  expect(response.body).to.have.property('status', 'You may not request more than 100 items.');\n});",
              "err": {},
              "uuid": "c53c47e2-b958-4c1f-b4ee-3e67fbed18fd",
              "parentUUID": "727072af-de71-4efd-aef9-ab1f27098651",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93dfd10d-c744-42d1-9a89-fee08519d8be",
            "a803f61c-65f1-4bae-a231-41c82fbeed2e",
            "c53c47e2-b958-4c1f-b4ee-3e67fbed18fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "57b1c271-2c7b-4257-a1d8-5a6f78b6599f",
      "title": "",
      "fullFile": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "file": "cypress/integration/QAChallenge/TS_004 checkOut.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d703a372-8781-43d6-a97b-6bf5ce4b8bac",
          "title": "Checkout Test case",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Checkout Item",
              "fullTitle": "Checkout Test case Checkout Item",
              "timedOut": null,
              "duration": 27356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Adding Item to shopping Cart\ncy.addToShoppingCart(this.data.item);\nCHECK.cartSuccessLabel().should('include.text', 'Product successfully added to your shopping cart');\nCHECK.cartQuantity().should('have.text', this.data.quantity);\nCHECK.cartColor().should('include.text', this.data.color);\nCHECK.cartItemName().should('have.text', this.data.item);\nCHECK.cartTotal().should('have.text', this.data.price);\nCHECK.goToCheckOut().click(); //checkOut Process\nCHECK.checkoutButton().click();\nCHECK.checkoutButton().click();\nCHECK.termsOfService().check().should('be.checked');\nCHECK.checkoutButton().click();\nCHECK.payWithBankWire().click();\nCHECK.paymentName().should('include.text', 'Bank-wire payment.');\nCHECK.checkoutButton().click();\nCHECK.orderConfirmation().should('have.text', 'Your order on My Store is complete.');\nCHECK.finalPrice().should('have.text', '$29.00');\ncy.signOut();",
              "err": {},
              "uuid": "fe4e04fa-0ac1-494b-bf6c-4e9c420f18ef",
              "parentUUID": "d703a372-8781-43d6-a97b-6bf5ce4b8bac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe4e04fa-0ac1-494b-bf6c-4e9c420f18ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportDir": "cypress/reports/mocha",
        "reportTitle": "Senior QA Challenge: Raffy Rodriguez's Test's results",
        "reportFilename": "report",
        "reportPageTitle": "Senior QA Challenge's Test Results",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mm/dd/yyyy HH:MM"
      },
      "version": "6.0.1"
    }
  }
}